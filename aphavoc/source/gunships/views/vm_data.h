// 
// 	 Enemy Engaged RAH-66 Comanche Versus KA-52 Hokum
// 	 Copyright (C) 2000 Empire Interactive (Europe) Ltd,
// 	 677 High Road, North Finchley, London N12 0DA
// 
// 	 Please see the document LICENSE.TXT for the full licence agreement
// 
// 2. LICENCE
//  2.1 	
//  	Subject to the provisions of this Agreement we now grant to you the 
//  	following rights in respect of the Source Code:
//   2.1.1 
//   	the non-exclusive right to Exploit  the Source Code and Executable 
//   	Code on any medium; and 
//   2.1.2 
//   	the non-exclusive right to create and distribute Derivative Works.
//  2.2 	
//  	Subject to the provisions of this Agreement we now grant you the
// 	following rights in respect of the Object Code:
//   2.2.1 
// 	the non-exclusive right to Exploit the Object Code on the same
// 	terms and conditions set out in clause 3, provided that any
// 	distribution is done so on the terms of this Agreement and is
// 	accompanied by the Source Code and Executable Code (as
// 	applicable).
// 
// 3. GENERAL OBLIGATIONS
//  3.1 
//  	In consideration of the licence granted in clause 2.1 you now agree:
//   3.1.1 
// 	that when you distribute the Source Code or Executable Code or
// 	any Derivative Works to Recipients you will also include the
// 	terms of this Agreement;
//   3.1.2 
// 	that when you make the Source Code, Executable Code or any
// 	Derivative Works ("Materials") available to download, you will
// 	ensure that Recipients must accept the terms of this Agreement
// 	before being allowed to download such Materials;
//   3.1.3 
// 	that by Exploiting the Source Code or Executable Code you may
// 	not impose any further restrictions on a Recipient's subsequent
// 	Exploitation of the Source Code or Executable Code other than
// 	those contained in the terms and conditions of this Agreement;
//   3.1.4 
// 	not (and not to allow any third party) to profit or make any
// 	charge for the Source Code, or Executable Code, any
// 	Exploitation of the Source Code or Executable Code, or for any
// 	Derivative Works;
//   3.1.5 
// 	not to place any restrictions on the operability of the Source 
// 	Code;
//   3.1.6 
// 	to attach prominent notices to any Derivative Works stating
// 	that you have changed the Source Code or Executable Code and to
// 	include the details anddate of such change; and
//   3.1.7 
//   	not to Exploit the Source Code or Executable Code otherwise than
// 	as expressly permitted by  this Agreement.
// 



/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define NUM_COCKPIT_PANORAMA_ROWS	4
#define NUM_COCKPIT_PANORAMA_COLS	7

#define MIN_COCKPIT_PANORAMA_ROW		0
#define MIN_COCKPIT_PANORAMA_COL		0
#define MID_COCKPIT_PANORAMA_ROW		(NUM_COCKPIT_PANORAMA_ROWS / 2)
#define MID_COCKPIT_PANORAMA_COL		(NUM_COCKPIT_PANORAMA_COLS / 2)
#define MAX_COCKPIT_PANORAMA_ROW		(NUM_COCKPIT_PANORAMA_ROWS - 1)
#define MAX_COCKPIT_PANORAMA_COL		(NUM_COCKPIT_PANORAMA_COLS - 1)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern view_modes
	view_mode;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#define get_view_mode() (view_mode)

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern int
	in_cockpit_flags[NUM_VIEW_MODES];

extern int
	in_cockpit;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern int
	cockpit_panorama_row_values[NUM_VIEW_MODES];

extern int
	cockpit_panorama_row;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern int
	cockpit_panorama_col_values[NUM_VIEW_MODES];

extern int
	cockpit_panorama_col;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern view_modes
	cockpit_panel_panorama[NUM_COCKPIT_PANORAMA_ROWS][NUM_COCKPIT_PANORAMA_COLS];

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern float
	pilot_head_heading_values[NUM_VIEW_MODES];

extern float
	pilot_head_heading;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern float
	pilot_head_pitch_values[NUM_VIEW_MODES];

extern float
	pilot_head_pitch;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern float
	stored_pilot_head_heading,
	stored_pilot_head_pitch,
	stored_co_pilot_head_heading,
	stored_co_pilot_head_pitch;

extern view_modes
	stored_pilot_view_mode,
	stored_co_pilot_view_mode;

extern padlock_modes
	stored_pilot_padlock_mode,
	stored_co_pilot_padlock_mode;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern viewpoint
	pilot_head_vp;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

extern int
	record_screen_sequence;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

     
//VJ 030318 wideview mod
extern int 
        wide_cockpit;        

extern int 
        edit_wide_cockpit;

struct COCKPIT_POSITION {
  float x,y,z;
};

typedef struct COCKPIT_POSITION cockpit_position;

extern cockpit_position wide_cockpit_position[6]; 
// 4 helicopters with 2 copilots

//VJ 030318 wideview mod
extern int wide_cockpit_nr;

//VJ 030324 framerate 
extern float framerate, framerate_avg;
extern int doframerate;

//VJ 030423 TSD render mod
enum TSD_RENDER_MODES
{
	TSD_RENDER_NONE_MODE,
	TSD_RENDER_CONTOUR_MODE,
	TSD_RENDER_CONTOUR_RELIEF_MODE,
	TSD_RENDER_RELIEF_MODE,
	TSD_RENDER_SHADED_RELIEF_MODE,
	TSD_RENDER_CONTOUR_SHADED_RELIEF_MODE
};

typedef enum TSD_RENDER_MODES tsd_render_modes;
extern tsd_render_modes tsd_render_mode;

//VJ 030429 TSD render mod
extern int tsd_render_palette;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
